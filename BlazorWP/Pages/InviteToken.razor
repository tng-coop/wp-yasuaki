@page "/invite-token"
@using System.Net.Http.Json
@inject LocalStorageJsInterop StorageJs
@inject AuthMessageHandler AuthHandler

<PageTitle>Invite Token</PageTitle>

<h1>Invite Token</h1>

@if (httpClient == null)
{
    <p>Please verify a WordPress endpoint on the <NavLink href="/">Home</NavLink> page first.</p>
}
else
{
    <button class="btn btn-primary" @onclick="GenerateTokenAsync">Generate Token</button>

    @if (responseJson != null)
    {
        <div class="mt-3">
            <strong>Token:</strong>
            <pre class="json-view">@responseJson</pre>
        </div>
    }
    @if (!string.IsNullOrEmpty(error))
    {
        <p class="text-danger mt-2">@error</p>
    }
}

@code {
    private HttpClient? httpClient;
    private InviteResponse? response;
    private string? responseJson;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        var endpoint = await StorageJs.GetItemAsync("wpEndpoint");
        if (string.IsNullOrEmpty(endpoint))
        {
            return;
        }
        var baseUrl = endpoint.TrimEnd('/') + "/wp-json/";
        httpClient = new HttpClient(AuthHandler) { BaseAddress = new Uri(baseUrl) };
    }

    private async Task GenerateTokenAsync()
    {
        if (httpClient == null) return;
        response = null;
        error = null;
        responseJson = null;
        try
        {
            using var resp = await httpClient.PostAsync("invite/v1/token", null);
            var json = await resp.Content.ReadAsStringAsync();
            if (resp.IsSuccessStatusCode)
            {
// no re-serialization, just indent in place
responseJson = JsonDocument
  .Parse(json)
  .RootElement
  .GetRawText();



            }
            else
            {
                error = json;
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    private class InviteResponse
    {
        public string? token { get; set; }
        public int expiresIn { get; set; }
        public string? issuedAt { get; set; }
    }
}
