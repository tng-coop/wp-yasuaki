@page "/edit"
@using TinyMCE.Blazor
@using System.Text.Json
@using System.Threading
@using Humanizer
@using BlazorWP.Data
@inject IJSRuntime JS
@inject LocalStorageJsInterop StorageJs
@inject IWordPressApiService Api
@inject IStringLocalizer<Edit> L
@inject IConfiguration Config
@inject BlazorWP.Data.AppFlags Flags
@implements IDisposable
@implements IAsyncDisposable

<PageTitle>@L["EditTitle"]</PageTitle>


@if (mediaSources.Any() && Flags.Mode != AppMode.Basic)
{
    <div class="mb-3">
        <label class="form-label" for="mediaSource">@L["MediaSource"]</label>
        <select id="mediaSource" class="form-select" @bind="selectedMediaSource" @bind:after="OnMediaSourceChanged">
            <option value="">@L["ChooseMediaSite"]</option>
            @foreach (var site in mediaSources)
            {
                <option value="@site">@site</option>
            }
        </select>
    </div>
}

@if (posts == null)
{
    <p><em>@L["LoadingPosts"]</em></p>
}
else if (showTable)
{
    <div class="table-scroll">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>@L["Id"]</th>
                    <th>@L["Title"]</th>
                    <th>@L["Author"]</th>
                    <th>@L["Status"]</th>
                    <th>@L["PublicationDate"]</th>
                    <th>@L["ChangeStatus"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in DisplayPosts)
                {
                    <tr @key="p.Id" class="article-row @(IsSelected(p, postId) ? "table-primary" : null)"
                        @onclick="() => OpenPost(p)">
                        <td>@(p.Id > 0 ? p.Id.ToString() : "")</td>
                        <td>@p.Title</td>
                        <td>@(string.IsNullOrEmpty(p.AuthorName) ? (p.Author > 0 ? p.Author.ToString() : "") : p.AuthorName)
                        </td>
                        <td>@p.Status</td>
                        <td>@(p.Date.HasValue? p.Date.Value.Humanize() : "")</td>
                        <td>
                            @if (p.Id > 0 && !string.IsNullOrEmpty(p.Status))
                            {
                                <div class="dropdown">
                                    <button class="btn btn-sm @(GetStatusButtonClass(p.Status)) dropdown-toggle" type="button"
                                        data-bs-toggle="dropdown" aria-expanded="false" @onclick:stopPropagation="true">
                                        @p.Status
                                    </button>
                                    <ul class="dropdown-menu">
                                        @foreach (var st in availableStatuses)
                                        {
                                            <li>
                                                <button type="button" class="dropdown-item @(p.Status == st ? "active" : null)"
                                                    @onclick="() => ChangeStatus(p, st)" @onclick:stopPropagation="true">@st</button>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}




<Editor Id="mainEditor" ScriptSrc="libman/tinymce/tinymce.min.js" LicenseKey="gpl" JsConfSrc="myTinyMceConfig"
    Readonly="@EditorReadOnly" @bind-Value="_content" @bind-Value:after="UpdateDirty" />
