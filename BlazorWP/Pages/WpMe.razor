@page "/wp-me"
@using Editor.WordPress      
@inject IWordPressApiService Api

<PageTitle>WP /me</PageTitle>

<h1>WordPress /users/me</h1>

@if (loading)
{
  <p><em>Loadingâ€¦</em></p>
}
else if (!string.IsNullOrEmpty(error))
{
  <div data-testid="wp-me-error" class="text-danger">@error</div>
}
else if (meId is not null)
{
  <div data-testid="wp-me-ok">
    <div><strong>id:</strong> @meId</div>
    <div><strong>name:</strong> @meName</div>
  </div>
}
else
{
  <p>No data.</p>
}

@code {
  private bool loading = true;
  private string? error;
  private long? meId;
  private string? meName;

  protected override async Task OnInitializedAsync()
  {
    try
    {
      var client = await Api.GetClientAsync(); // reads wpEndpoint from localStorage if needed
      if (client is null)
      {
        error = "No WordPress endpoint configured (localStorage 'wpEndpoint' missing).";
        return;
      }

      var me = await client.Users.GetCurrentUserAsync();
      meId = me?.Id;
      meName = me?.Name;
    }
    catch (Exception ex)
    {
      error = ex.Message;
    }
    finally
    {
      loading = false;
    }
  }
}
