## Allow only 221.113.64.97
#<IfModule mod_authz_core.c>
#  Require ip 221.113.64.97
#</IfModule>
#<IfModule !mod_authz_core.c>
#  Order Deny,Allow
#  Deny from all
#  Allow from 221.113.64.97
#</IfModule>
# === Block any dot-path (files or directories), except /.well-known/ ===
<IfModule mod_rewrite.c>
  RewriteEngine On

  # Block dot paths (except .well-known)
  RewriteCond %{REQUEST_URI} "(^|/)\.(?!well-known/)" [NC]
  RewriteRule .* - [F]

  # Allow just preload.js under mu-plugins
  RewriteRule ^wp-content/mu-plugins/shared-esm/preload\.js$ - [L]

  # Block everything else under mu-plugins
  RewriteRule ^wp-content/mu-plugins/ - [F,L]

  # Block PHP in wp-includes
  RewriteRule ^wp-includes/[^/]+\.php$ - [F]
</IfModule>
# Belt-and-suspenders: block .git explicitly
RedirectMatch 404 "(^|/)\.git(/|$)"

# Protect wp-config.php
<Files "wp-config.php">
  Require all denied
</Files>

# Avoid odd content negotiation issues
<IfModule mod_negotiation.c>
  Options -MultiViews
</IfModule>

# 1) Block debug/log/backup dumps
<FilesMatch "(^debug\.log$|error_log|\.sql(\.gz)?$|\.tar(\.gz)?$|\.zip$|\.bak$|\.old$)">
  Require all denied
</FilesMatch>

# 2) Hide readme.html
<Files "readme.html">
  Require all denied
</Files>

# 3) Stop access to mu-plugins (still loads via PHP internally)
#    Option A: block directory listing globally (recommended site-wide)
Options -Indexes


# No .git ever
RedirectMatch 404 "(^|/)\.git(/|$)"

# Protect configs
<Files "wp-config.php">
  Require all denied
</Files>
<FilesMatch "(^(\.env|composer\.(json|lock)|package\.json)$|wp-config\.sample\.php$)">
  Require all denied
</FilesMatch>

# Lean routing
<IfModule mod_negotiation.c>
  Options -MultiViews
</IfModule>

# Logs / dumps / archives
<FilesMatch "(^debug\.log$|error_log|\.sql(\.gz)?$|\.tar(\.gz)?$|\.zip$|\.bak$|\.old$)">
  Require all denied
</FilesMatch>

# Hide readme
<Files "readme.html">
  Require all denied
</Files>

# Stop direct cron hits; local only (pair with DISABLE_WP_CRON)
<Files "wp-cron.php">
  Require ip 127.0.0.1 ::1
</Files>

# Global: no directory listings
Options -Indexes

# Security headers (ok to move to vhost)
<IfModule mod_headers.c>
  Header always set X-Content-Type-Options "nosniff"
  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"
</IfModule>


# ─── Block all access to /backup ───────────────────────────────────────────────
<IfModule mod_rewrite.c>
    RewriteEngine On
    # If the request URI starts with “backup” then abort with 403 Forbidden
    RewriteRule ^backup(/|$) - [F,L]
</IfModule>

<FilesMatch "composer\.(json|lock)$">
  <IfModule mod_authz_core.c>
    Require all denied
  </IfModule>
  <IfModule !mod_authz_core.c>
    Deny from all
  </IfModule>
</FilesMatch>
<IfModule mod_authz_core.c>
  <FilesMatch "^\.ht">
    Require all denied
  </FilesMatch>
</IfModule>
<IfModule !mod_authz_core.c>
  <FilesMatch "^\.ht">
    Deny from all
  </FilesMatch>
</IfModule>


<IfModule mod_env.c>
  # Google OAuth2
  SetEnv GOOGLE_CLIENT_ID     "170092734657-7hub170g0k86v1a0n4h1g5ehfp81auke.apps.googleusercontent.com"
  SetEnv GOOGLE_CLIENT_SECRET "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"

  # GitHub OAuth2
  #SetEnv GITHUB_CLIENT_ID     "Iv23ctQ2gn6ZjDX38D03"
  #SetEnv GITHUB_CLIENT_SECRET "d22a889adf70d5628d6c972909d3f1d421199a8b"

  SetEnv GITHUB_CLIENT_ID     "Iv23li64oBIuclX7b9dp"
  SetEnv GITHUB_CLIENT_SECRET "a2fed1c3a8d720e81d8a449f186aac2b1ec987d2"
  SetEnv PEXELS_API_KEY "JpXswTnudF41NghnH7sVtvxaaRNW7cDuR73jQvvs1YA57K0iwVpALtCn"
</IfModule>



# ─── Global rewrites ────────────────────────────────────────────────────────────
<IfModule mod_rewrite.c>
  RewriteEngine On

  # 0) Gate: if NOT logged in to WordPress, send visitors to /bible/
  #    (Skip when already under /bible/, or for infra endpoints/assets)
  RewriteCond %{REQUEST_URI} !^/bible(/|$) [NC]
  RewriteCond %{REQUEST_URI} !^/wp-login\.php$ [NC]
  RewriteCond %{REQUEST_URI} !^/wp-admin/ [NC]
  RewriteCond %{REQUEST_URI} !^/wp-cron\.php$ [NC]
  RewriteCond %{REQUEST_URI} !^/wp-json/ [NC]
  RewriteCond %{REQUEST_URI} !^/blazorapp(/|$) [NC]
  RewriteCond %{REQUEST_URI} !\.(css|js|png|jpe?g|gif|svg|webp|ico|woff2?|ttf|eot|pdf|txt|xml|map)$ [NC]
  RewriteCond %{HTTP_COOKIE} !wordpress_logged_in_ [NC]
  RewriteRule ^ /bible/ [L]

  # 1) Any request for /blazorapp/... should NOT go to WordPress:
  #    - If it's a real file/dir (your .dll, .js, css, etc.), serve it
  RewriteCond %{REQUEST_URI}    ^/blazorapp
  RewriteCond %{REQUEST_FILENAME} -f [OR]
  RewriteCond %{REQUEST_FILENAME} -d
  RewriteRule ^ - [L]

  #    - Otherwise (e.g. /blazorapp/edit), serve your SPA’s index.html
  RewriteCond %{REQUEST_URI}    ^/blazorapp
  RewriteRule ^blazorapp/.*$   /blazorapp/index.html [L]

  # 2) Bible files moved to /bible/: preserve old URLs with 301 redirects
  #    /bible -> /bible/
  RewriteRule ^bible$ /bible/ [R=301,L]
  #    /bible.html -> /bible/ (assumes /bible/index.html exists)
  RewriteRule ^bible\.html$ /bible/ [R=301,L]
  #    any bible* file formerly in docroot -> /bible/<same-file>
  RewriteRule ^(bible[^/]*\.(html|css|js|json|txt|xml|png|jpe?g|gif|svg|webp|pdf))$ /bible/$1 [R=301,L]
</IfModule>



# ─── WordPress below ────────────────────────────────────────────────────────────
# Only one WordPress block is needed; remove any duplicates.
# BEGIN WordPress
# "BEGIN WordPress" から "END WordPress" までのディレクティブ (行) は
# 動的に生成され、WordPress フィルターによってのみ修正が可能です。
# これらのマーカー間にあるディレクティブへのいかなる変更も上書きされてしまいます。
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>

# END WordPress
